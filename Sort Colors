Given an array nums with n objects colored red, white, or blue, sort them in-place so that objects of the same color are adjacent, with the colors in the order red, white, and blue.

We will use the integers 0, 1, and 2 to represent the color red, white, and blue, respectively.

You must solve this problem without using the library's sort function.

 

Example 1:

Input: nums = [2,0,2,1,1,0]
Output: [0,0,1,1,2,2]
Example 2:

Input: nums = [2,0,1]
Output: [0,1,2]
 

Constraints:

n == nums.length
1 <= n <= 300
nums[i] is either 0, 1, or 2.




Solution:
class Solution(object):
    def sortColors(self, nums):
        n=len(nums)
        zero,one,two=0,0,n-1
        while one<=two:
            if nums[one]==1:
                one+=1
            elif nums[one]==2:
                nums[one],nums[two]=nums[two],nums[one]
                two-=1
            else:
                nums[zero],nums[one]=nums[one],nums[zero]
                zero+=1
                one+=1
